Height = round(rnorm(n, mean = 170, sd = 10)), # Рост в см
Weight = round(rnorm(n, mean = 70, sd = 15)), # Вес в кг
Age = sample(18:80, n, replace = TRUE), # Возраст
Gender = sample(c("Male", "Female"), n, replace = TRUE) # Пол
)
head(df) # Вывод data.frame
head(tf) # Вывод tibble
df[,1]
tf[,1]
patients <- read_csv2("data/patients.csv")
head(patients)
str(patients)
glimpse(patients)
write_excel_csv2(patients, "data/modified_patients.csv")
select(patients, 1, 2)
select(patients, Person_ID, Height)
patients%>% select(Person_ID, Height)
patients_1 <- select(patients, Person_ID, Height, Weight)
patients_2 <- mutate(patients_1, BMI = Weight / ((Height / 100) ** 2))
patients_3 <- filter(patients_2, BMI > 24, Height < 171)
patients_4 <- arrange(patients_3, Height)
head(patients_4)
patients%>%
select(Person_ID, Height, Weight) %>%
mutate(BMI = Weight / ((Height / 100) ** 2)) %>%
filter(BMI > 24, Height < 171) %>%
arrange(desc(Height))
patients%>% filter(Height > 100) %>% select(Person_ID) -> selected_persons
patients %>% filter(Height > 100) %>% select(Person_ID) -> selected_persons
selected_persons <- patients %>% filter(Height > 100) %>% select(Person_ID)
selected_persons <- patients %>%
filter(Height > 100) %>%
select(-Person_ID)
patients%>%
filter(Person_ID %in% c("Person_0002", "Person_0005", "Person_0010"))
data_with_na <- patients%>%
mutate(
Weight = if_else(Person_ID %in% c("Person_0002", "Person_0005", "Person_0010"), NA, Weight)
)
head(data_with_na)
data_with_na %>%
filter(is.na(Weight))
patients %>% slice(2:5, 7, 10)
patients %>% slice_sample(n=8) # выбрать 8 случайных рядов
patients %>% slice_min(prop=0.2, Height) # выбрать 20% наименьших
patients %>% slice_max(prop=0.2, Height) # выбрать 20% наибольших
patients %>% slice_head(n=5) # выбрать первых 5
patients %>% slice_tail(n=5) # выбрать последних 5
Life_expectancy <- read_csv("data/Life expectancy.csv")
Life_expectancy <- Life_expectancy %>%
mutate(Happiness_Score_level = case_when(
Happiness_Score < 5 ~ "Low",
between(Happiness_Score, 5, 6) ~ "Medium",
Happiness_Score > 6 ~ "High",
TRUE ~ as.character(Happiness_Score) # Нужно, если наши значения не покрыты условиями
))
Life_expectancy %>% glimpse()
Life_expectancy <- read_csv("data/Life expectancy.csv")
Life_expectancy
Life_expectancy <- read_csv("data/Life expectancy.csv")
Life_expectancy
Life_expectancy <- Life_expectancy %>%
mutate(Happiness_Score_level = case_when(
Happiness_Score < 5 ~ "Low",
between(Happiness_Score, 5, 6) ~ "Medium",
Happiness_Score > 6 ~ "High",
TRUE ~ as.character(Happiness_Score) # Нужно, если наши значения не покрыты условиями
))
Life_expectancy %>% glimpse()
patients %>%
select(where(is.numeric))
patients %>%
select(where(is.numeric))
patients %>%
select_if(is.numeric)
?select_if
patients %>%
select(where(is.numeric), everything())
patients %>%
select(where(is.factor), everything())
patients %>% str()
patients %>%
select(where(is.chraracter), everything())
patients %>%
select(where(is.numeric), everything())
patients %>%
select(where(is.numeric), everything())
patients %>%
mutate(Weight_feet = Weight * 0.0685218)
patients %>%
select(Weight_feet = Weight * 0.0685218, everything())
patients %>%
select(Weight_feet = Weight)
patients %>%
select(Weight_kg = Weight)
patients %>%
select(`Weight, kg` = Weight)
patients %>%
select(`Weight, kg` = Weight, everything())
selected_persons <- patients %>%
filter(between(Height > 100)) %>%
select(-Person_ID)
selected_persons <- patients %>%
filter(between(Height, 80, 110)) %>%
select(-Person_ID)
patients %>%
filter(between(Height, 80, 110)) %>%
select(-Person_ID)
patients %>%
filter(between(Height, 80, 110)) %>%
select(-Person_ID)
patients %>%
filter(between(Height, 80, 200)) %>%
select(-Person_ID)
patients %>%
filter(between(Height, 175, 180)) %>%
select(-Person_ID)
patients %>%
filter(between(Height, 175, 180))
patients %>%
filter(between(Height, 185, 190))
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
library(tidyverse) # Загрузка библиотеки tidyverse
# Создадим пример не tidy data
df_messy <- data.frame(
Name = c("Павел Кариотипов", "Хромосомова", "Геннадий Хромосомов", "Дарвинина Е.", "Boris"),
Age_Weight = c("25 years, 60kg", "30 год, 70кг", "20yrs 55 кг", "35 year 80kg", "40, 65 кило"),
Height = c("170cm", "175cm", "1,8", "170cм", "165 cм"),
Gender = c("Female", "Male", "male", "MALE", "Femily"),
Blood_Pressure_1 = c("120/80mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "110 на 70 mmHg"),
Blood_Pressure_2 = c("110/90mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "100 на 80 mmHg")
)
# Выводим результат
print(df_messy)
# Создадим пример не tidy data
df_messy <- data.frame(
Name = c("Павел Кариотипов", "Хромосомова", "Геннадий Хромосомов", "Дарвинина Е.", "Boris"),
Age_Weight = c("25 years, 60kg", "30 год, 70кг", "20yrs 55 кг", "35 year 80kg", "40, 65 кило"),
Height = c("170cm", "175cm", "1,8", "170cм", "165 cм"),
Gender = c("Female", "Male", "male", "MALE", "Femily"),
Blood_Pressure_1 = c("120/80mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "110 на 70 mmHg"),
Blood_Pressure_2 = c("110/90mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "100 на 80 mmHg")
)
# Выводим результат
print(df_messy)
n <- 100  # Количество записей
set.seed(42) # Зерно для случайной генерации
# Генерация стандартного data.frame
df <- data.frame(
`Person ID` = paste0("Person_", sprintf("%04d", 1:n)), # ID
Height = round(rnorm(n, mean = 170, sd = 10)), # Рост в см
Weight = round(rnorm(n, mean = 70, sd = 15)), # Вес в кг
Age = sample(18:80, n, replace = TRUE), # Возраст
Gender = sample(c("Male", "Female"), n, replace = TRUE) # Пол
)
# Генерация tibble
tf <- tibble(
`Person ID` = paste0("Person_", sprintf("%04d", 1:n)), # ID
Height = round(rnorm(n, mean = 170, sd = 10)), # Рост в см
Weight = round(rnorm(n, mean = 70, sd = 15)), # Вес в кг
Age = sample(18:80, n, replace = TRUE), # Возраст
Gender = sample(c("Male", "Female"), n, replace = TRUE) # Пол
)
head(df) # Вывод data.frame
head(tf) # Вывод tibble
df[,1]
tf[,1]
tf$`Person ID`
df$Hei
tf$Hei
df[,1]
tf[,1]
patients <- read_csv2("data/patients.csv")
head(patients)
str(patients)
glimpse(patients)
glimpse(patients)
glimpse(patients)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
library(tidyverse) # Загрузка библиотеки tidyverse
# Создадим пример не tidy data
df_messy <- data.frame(
Name = c("Павел Кариотипов", "Хромосомова", "Геннадий Хромосомов", "Дарвинина Е.", "Boris"),
Age_Weight = c("25 years, 60kg", "30 год, 70кг", "20yrs 55 кг", "35 year 80kg", "40, 65 кило"),
Height = c("170cm", "175cm", "1,8", "170cм", "165 cм"),
Gender = c("Female", "Male", "male", "MALE", "Femily"),
Blood_Pressure_1 = c("120/80mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "110 на 70 mmHg"),
Blood_Pressure_2 = c("110/90mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "100 на 80 mmHg")
)
write_csv2("data/df_messy.csv")
# Создадим пример не tidy data
df_messy <- data.frame(
Name = c("Павел Кариотипов", "Хромосомова", "Геннадий Хромосомов", "Дарвинина Е.", "Boris"),
Age_Weight = c("25 years, 60kg", "30 год, 70кг", "20yrs 55 кг", "35 year 80kg", "40, 65 кило"),
Height = c("170cm", "175cm", "1,8", "170cм", "165 cм"),
Gender = c("Female", "Male", "male", "MALE", "Femily"),
Blood_Pressure_1 = c("120/80mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "110 на 70 mmHg"),
Blood_Pressure_2 = c("110/90mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "100 на 80 mmHg")
)
write_csv("data/df_messy.csv")
df_messy
# Создадим пример не tidy data
df_messy <- data.frame(
Name = c("Павел Кариотипов", "Хромосомова", "Геннадий Хромосомов", "Дарвинина Е.", "Boris"),
Age_Weight = c("25 years, 60kg", "30 год, 70кг", "20yrs 55 кг", "35 year 80kg", "40, 65 кило"),
Height = c("170cm", "175cm", "1,8", "170cм", "165 cм"),
Gender = c("Female", "Male", "male", "MALE", "Femily"),
Blood_Pressure_1 = c("120/80mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "110 на 70 mmHg"),
Blood_Pressure_2 = c("110/90mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "100 на 80 mmHg")
)
write_table("data/df_messy.tbl")
write_table("data/df_messy.tbl")
# Создадим пример не tidy data
df_messy <- data.frame(
Name = c("Павел Кариотипов", "Хромосомова", "Геннадий Хромосомов", "Дарвинина Е.", "Boris"),
Age_Weight = c("25 years, 60kg", "30 год, 70кг", "20yrs 55 кг", "35 year 80kg", "40, 65 кило"),
Height = c("170cm", "175cm", "1,8", "170cм", "165 cм"),
Gender = c("Female", "Male", "male", "MALE", "Femily"),
Blood_Pressure_1 = c("120/80mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "110 на 70 mmHg"),
Blood_Pressure_2 = c("110/90mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "100 на 80 mmHg")
)
write_delim("data/df_messy.tbl", delim = "\t")
df_messy
?write_delim
# Создадим пример не tidy data
df_messy <- data.frame(
Name = c("Павел Кариотипов", "Хромосомова", "Геннадий Хромосомов", "Дарвинина Е.", "Boris"),
Age_Weight = c("25 years, 60kg", "30 год, 70кг", "20yrs 55 кг", "35 year 80kg", "40, 65 кило"),
Height = c("170cm", "175cm", "1,8", "170cм", "165 cм"),
Gender = c("Female", "Male", "male", "MALE", "Femily"),
Blood_Pressure_1 = c("120/80mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "110 на 70 mmHg"),
Blood_Pressure_2 = c("110/90mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "100 на 80 mmHg")
)
write_tsv("data/df_messy.tsv")
# Создадим пример не tidy data
df_messy <- data.frame(
Name = c("Павел Кариотипов", "Хромосомова", "Геннадий Хромосомов", "Дарвинина Е.", "Boris"),
Age_Weight = c("25 years, 60kg", "30 год, 70кг", "20yrs 55 кг", "35 year 80kg", "40, 65 кило"),
Height = c("170cm", "175cm", "1,8", "170cм", "165 cм"),
Gender = c("Female", "Male", "male", "MALE", "Femily"),
Blood_Pressure_1 = c("120/80mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "110 на 70 mmHg"),
Blood_Pressure_2 = c("110/90mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "100 на 80 mmHg")
)
write_tsv("data/df_messy.tsv")
# Создадим пример не tidy data
df_messy <- data.frame(
Name = c("Павел Кариотипов", "Хромосомова", "Геннадий Хромосомов", "Дарвинина Е.", "Boris"),
Age_Weight = c("25 years, 60kg", "30 год, 70кг", "20yrs 55 кг", "35 year 80kg", "40, 65 кило"),
Height = c("170cm", "175cm", "1,8", "170cм", "165 cм"),
Gender = c("Female", "Male", "male", "MALE", "Femily"),
Blood_Pressure_1 = c("120/80mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "110 на 70 mmHg"),
Blood_Pressure_2 = c("110/90mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "100 на 80 mmHg")
)
write_tsv("data/df_messy.tsv")
# Создадим пример не tidy data
df_messy <- data.frame(
Name = c("Павел Кариотипов", "Хромосомова", "Геннадий Хромосомов", "Дарвинина Е.", "Boris"),
Age_Weight = c("25 years, 60kg", "30 год, 70кг", "20yrs 55 кг", "35 year 80kg", "40, 65 кило"),
Height = c("170cm", "175cm", "1,8", "170cм", "165 cм"),
Gender = c("Female", "Male", "male", "MALE", "Femily"),
Blood_Pressure_1 = c("120/80mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "110 на 70 mmHg"),
Blood_Pressure_2 = c("110/90mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "100 на 80 mmHg")
)
write.csv2("data/df_messy.csv")
# Выводим результат
print(df_messy)
View(df_messy)
write.csv2("data/df_messy.csv")
# Создадим пример не tidy data
df_messy <- data.frame(
Name = c("Павел Кариотипов", "Хромосомова", "Геннадий Хромосомов", "Дарвинина Е.", "Boris"),
Age_Weight = c("25 years, 60kg", "30 год, 70кг", "20yrs 55 кг", "35 year 80kg", "40, 65 кило"),
Height = c("170cm", "175cm", "1,8", "170cм", "165 cм"),
Gender = c("Female", "Male", "male", "MALE", "Femily"),
Blood_Pressure_1 = c("120/80mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "110 на 70 mmHg"),
Blood_Pressure_2 = c("110/90mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "100 на 80 mmHg")
)
write.csv2("data/df_messy.csv")
# Выводим результат
print(df_messy)
# Создадим пример не tidy data
df_messy <- data.frame(
Name = c("Павел Кариотипов", "Хромосомова", "Геннадий Хромосомов", "Дарвинина Е.", "Boris"),
Age_Weight = c("25 years, 60kg", "30 год, 70кг", "20yrs 55 кг", "35 year 80kg", "40, 65 кило"),
Height = c("170cm", "175cm", "1,8", "170cм", "165 cм"),
Gender = c("Female", "Male", "male", "MALE", "Femily"),
Blood_Pressure_1 = c("120/80mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "110 на 70 mmHg"),
Blood_Pressure_2 = c("110/90mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "100 на 80 mmHg")
)
write.csv2("df_messy.csv")
# Выводим результат
print(df_messy)
# Создадим пример не tidy data
df_messy <- data.frame(
Name = c("Павел Кариотипов", "Хромосомова", "Геннадий Хромосомов", "Дарвинина Е.", "Boris"),
Age_Weight = c("25 years, 60kg", "30 год, 70кг", "20yrs 55 кг", "35 year 80kg", "40, 65 кило"),
Height = c("170cm", "175cm", "1,8", "170cм", "165 cм"),
Gender = c("Female", "Male", "male", "MALE", "Femily"),
Blood_Pressure_1 = c("120/80mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "110 на 70 mmHg"),
Blood_Pressure_2 = c("110/90mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "100 на 80 mmHg")
)
write.csv2("df_messy.csv")
# Выводим результат
print(df_messy)
getwd()
# Создадим пример не tidy data
df_messy <- data.frame(
Name = c("Павел Кариотипов", "Хромосомова", "Геннадий Хромосомов", "Дарвинина Е.", "Boris"),
Age_Weight = c("25 years, 60kg", "30 год, 70кг", "20yrs 55 кг", "35 year 80kg", "40, 65 кило"),
Height = c("170cm", "175cm", "1,8", "170cм", "165 cм"),
Gender = c("Female", "Male", "male", "MALE", "Femily"),
Blood_Pressure_1 = c("120/80mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "110 на 70 mmHg"),
Blood_Pressure_2 = c("110/90mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "100 на 80 mmHg")
)
write.csv2("df_messy.csv")
# Выводим результат
print(df_messy)
# Создадим пример не tidy data
df_messy <- data.frame(
Name = c("Павел Кариотипов", "Хромосомова", "Геннадий Хромосомов", "Дарвинина Е.", "Boris"),
Age_Weight = c("25 years, 60kg", "30 год, 70кг", "20yrs 55 кг", "35 year 80kg", "40, 65 кило"),
Height = c("170cm", "175cm", "1,8", "170cм", "165 cм"),
Gender = c("Female", "Male", "male", "MALE", "Femily"),
Blood_Pressure_1 = c("120/80mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "110 на 70 mmHg"),
Blood_Pressure_2 = c("110/90mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "100 на 80 mmHg")
)
write.csv2("data/df_messy.csv")
# Выводим результат
print(df_messy)
# Создадим пример не tidy data
df_messy <- data.frame(
Name = c("Павел Кариотипов", "Хромосомова", "Геннадий Хромосомов", "Дарвинина Е.", "Boris"),
Age_Weight = c("25 years, 60kg", "30 год, 70кг", "20yrs 55 кг", "35 year 80kg", "40, 65 кило"),
Height = c("170cm", "175cm", "1,8", "170cм", "165 cм"),
Gender = c("Female", "Male", "male", "MALE", "Femily"),
Blood_Pressure_1 = c("120/80mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "110 на 70 mmHg"),
Blood_Pressure_2 = c("110/90mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "100 на 80 mmHg")
)
# Выводим результат
print(df_messy)
plot(cars)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
library(tidyverse) # Загрузка библиотеки tidyverse
# Создадим пример не tidy data
df_messy <- data.frame(
Name = c("Павел Кариотипов", "Хромосомова", "Геннадий Хромосомов", "Дарвинина Е.", "Boris"),
Age_Weight = c("25 years, 60kg", "30 год, 70кг", "20yrs 55 кг", "35 year 80kg", "40, 65 кило"),
Height = c("170cm", "175cm", "1,8", "170cм", "165 cм"),
Gender = c("Female", "Male", "male", "MALE", "Femily"),
Blood_Pressure_1 = c("120/80mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "110 на 70 mmHg"),
Blood_Pressure_2 = c("110/90mmHg", "130 на 85", "125 / 75 мм рт. ст.", "120/80", "100 на 80 mmHg")
)
df_messy %>% write_rds("data/df_messy.rds")
# Выводим результат
print(df_messy)
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
library(tidyverse) # Загрузка библиотеки tidyverse
read_rds("data/df_messy.rds")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
library(tidyverse) # Загрузка библиотеки tidyverse
read_rds("data/df_messy.rds")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("tidyverse")
library(tidyverse) # Загрузка библиотеки tidyverse
read_rds("data/df_messy.rds")
n <- 100  # Количество записей
set.seed(42) # Зерно для случайной генерации
# Генерация стандартного data.frame
df <- data.frame(
`Person ID` = paste0("Person_", sprintf("%04d", 1:n)), # ID
Height = round(rnorm(n, mean = 170, sd = 10)), # Рост в см
Weight = round(rnorm(n, mean = 70, sd = 15)), # Вес в кг
Age = sample(18:80, n, replace = TRUE), # Возраст
Gender = sample(c("Male", "Female"), n, replace = TRUE) # Пол
)
# Генерация tibble
tf <- tibble(
`Person ID` = paste0("Person_", sprintf("%04d", 1:n)), # ID
Height = round(rnorm(n, mean = 170, sd = 10)), # Рост в см
Weight = round(rnorm(n, mean = 70, sd = 15)), # Вес в кг
Age = sample(18:80, n, replace = TRUE), # Возраст
Gender = sample(c("Male", "Female"), n, replace = TRUE) # Пол
)
head(df) # Вывод data.frame
head(tf) # Вывод tibble
df[,1]
tf[,1]
tf$`Person ID`
df$H
tf$H
df$l
patients <- read_csv2("data/patients.csv")
head(patients)
str(patients)
glimpse(patients)
select(patients, 1, 2)
select(patients, Person_ID, Height)
patients %>% select(Person_ID, Height)
patients_df1 <- select(patients, Person_ID, Height, Weight)
patients_df2 <- mutate(patients_df1, BMI = Weight / ((Height / 100) ** 2))
patients_df3 <- filter(patients_df2, BMI > 24, Height < 171)
patients_df4 <- arrange(patients_df3, Height)
head(patients_f4)
patients_df1 <- select(patients, Person_ID, Height, Weight)
patients_df2 <- mutate(patients_df1, BMI = Weight / ((Height / 100) ** 2))
patients_df3 <- filter(patients_df2, BMI > 24, Height < 171)
patients_df4 <- arrange(patients_df3, Height)
head(patients_df4)
patients_df2
patients_df3
patients_df2
patients_df4
patients %>%
select(Person_ID, Height, Weight)
patients
patients %>%
select(Person_ID, Height, Weight)
patients
patients %>%
select(Person_ID, Height, Weight)
patients %>%
select(Person_ID, Height, Weight) %>%
mutate(BMI = Weight / ((Height / 100) ** 2))
patients %>%
select(Person_ID, Height, Weight) %>%
mutate(BMI = Weight / ((Height / 100) ** 2)) %>%
filter(BMI > 24, Height < 171)
patients %>%
select(Person_ID, Height, Weight) %>%
mutate(BMI = Weight / ((Height / 100) ** 2)) %>%
filter(BMI > 24, Height < 171) %>%
arrange(desc(Height))
patients %>%
select(Person_ID, Height, Weight) %>%
mutate(BMI = Weight / ((Height / 100) ** 2)) %>%
#  filter(BMI > 24, Height < 171) %>%
arrange(desc(Height))
patients %>%
select(Person_ID, Height, Weight) %>%
mutate(BMI = Weight / ((Height / 100) ** 2)) %>%
filter(BMI > 24, Height < 171)
patients
patients %>%
select(where(is.numeric), -Age)
patients %>%
select(where(is.numeric), -Age) %>% view()
View(df)
patients %>%
select(where(is.numeric), -Age)
patients %>%
select(where(is.numeric), everything())
patients %>%
select(`Weight, kg` = Weight,
`Height, cm` = Height,
`Age, years` = Age,
everything())
patients %>% slice(2:5, 7, 10)
patients %>% slice_sample(n=8) # выбрать 8 случайных рядов
patients %>% slice_min(prop=0.2, Height) # выбрать 20% наименьших
patients %>% slice_max(prop=0.2, Height) # выбрать 20% наибольших
patients %>% slice_head(n=5) # выбрать первых 5
patients %>% slice_tail(n=5) # выбрать последних 5
patients %>%
filter(Age > 50)
patients %>%
filter(between(Height, 185, 190))
patients %>%
filter(Person_ID %in% c("Person_0002", "Person_0005", "Person_0010"))
patients %>%
filter(is.na(Weight))
patients %>%
filter(!is.na(Weight))
patients %>%
filter(is.na(Weight))
Life_expectancy <- read_csv("data/Life expectancy.csv")
Life_expectancy
Life_expectancy %>% # перезаписывать не будем
mutate(Happiness_Score = Happiness_Score + 1,
Happiness_Score_level = "better than before")
Life_expectancy <- Life_expectancy %>%
mutate(Happiness_Score_level = case_when(
Happiness_Score < 5 ~ "Low",
between(Happiness_Score, 5, 6) ~ "Medium",
Happiness_Score > 6 ~ "High",
TRUE ~ as.character(Happiness_Score) # Нужно, если наши значения не покрыты условиями
))
Life_expectancy %>% glimpse()
Life_expectancy <- Life_expectancy %>%
mutate(Happiness_Score_level = as.factor(Happiness_Score_level))
Life_expectancy %>% glimpse()
Life_expectancy %>%
mutate(Happiness_Score_level = NULL)
set.seed(42) # Для воспроизводимости результата
Life_expectancy <- Life_expectancy %>%
mutate(Happiness_Score = ifelse(runif(n()) < 0.1, "Нет данных", Happiness_Score))
Life_expectancy %>%
filter(Happiness_Score == "Нет данных")
Life_expectancy <- Life_expectancy %>%
mutate(Happiness_Score = ifelse(Happiness_Score == "Нет данных", NA, Happiness_Score),
Happiness_Score = as.numeric(Happiness_Score))
Life_expectancy %>%
filter(is.na(Happiness_Score))
Life_expectancy %>% na.omit()
Life_expectancy <- Life_expectancy %>%
mutate(Happiness_Score = replace_na(Happiness_Score, mean(Happiness_Score, na.rm = TRUE)))
Life_expectancy %>%
filter(is.na(Happiness_Score))
